format = """
[┌](bold black) \
$username\
$hostname\
$shlvl\
$directory\
$vcsh\
$git_branch\
$git_commit\
$git_state\
$git_status\
${custom.p4_repo}\
$env_var\
$custom\
$fill \
$jobs\
$time\
$line_break\
[└](bold black) \
$sudo\
$character"""

[character]
success_symbol = "[❮^_^❯](bold green)"
error_symbol   = "[❮@_@❯](bold red)"

# [custom]
# disabled = true

[directory]
truncation_length = 9
[directory.substitutions]
'/proj/ch_func_gen_scratch' = '~SCRATCH'
'/proj/ch_func_dev0/CH/kshenoy/ch' = '~CH'
'/proj/ch_func_dev1/CH/kshenoy/ch' = '~CH'
'/proj/ch_func_dev0/CH' = '~CH0'
'/proj/ch_func_dev1/CH' = '~CH1'

[env_var]
disabled = true

[fill]
symbol = '─'

[hostname]
ssh_only = false
ssh_symbol = ''

[jobs]
symbol = '✦ '

[shlvl]
disabled = true

[sudo]
disabled = false

[time]
disabled = false
time_format = '%I:%M%P'

[vcsh]
disabled = true

[custom.p4_repo]
description = 'The active branch of the Perforce repository'
detect_files = ['P4CONFIG']
style = 'bold purple'
symbol = 'ℙ'
format = "on [$symbol $output]($style) "
command = "cut -d@ -f1 configuration_id"
# This will run it in a new shell and since we can't bootenv in that shell, it doesn't work as desired
# when = 'vcs::is_in_perforce_repo'
